version: '3.4'

x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

services:

  loki:
    image: grafana/loki:2.8.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - api-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    networks:
      - redis-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
    networks:
      - mongo-network

  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    environment:
      - MONGO_CLIENT=mongodb://mongodb:27017
    networks:
      - api-network
      - mongo-network

  scheduler:
    image: tosanchez/atsc-meetings:scheduler-dev
    environment:
      - SPRING_APPLICATION_NAME=Scheduler
      - SERVER_PORT=8080
      - SPRINGDOC_SWAGGER_UI_PATH=/scheduler-docs
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_NAME=meetings
    networks:
      - api-network
      - mongo-network
    depends_on:
      - auth

  gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    depends_on:
      - redis
      - loki
    ports:
      - "80:80"
    environment:
      - 'GATEWAY_SERVICES=[{"name": "Auth", "base_url": "http://auth:8000"},
      {"name": "Scheduler", "base_url": "http://scheduler:8080", "readiness_url": "/actuator/health"}]'
      - REDIS_HOST=redis://redis:6379
      - FASTAPI_USE_LIMITER=1
      - FASTAPI_LIMITER_THRESHOLD=30
      - FASTAPI_LIMITER_INTERVAL=60
      - FASTAPI_USE_TELEMETRY=1
      - FASTAPI_OTLP_GRPC_ENDPOINT=http://tempo:4317/
    networks:
      - api-network
      - redis-network
      - web-network
    logging: *default-logging

  prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    networks:
      - api-network
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.0.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "14250:14250"
    depends_on:
      - loki
    networks:
      - api-network
    logging: *default-logging

  grafana:
    image: grafana/grafana:9.4.7
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    networks:
      - api-network
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_FEATURE_TOGGLES_ENABLE: "traceqlEditor"
    logging: *default-logging

  web:
    environment:
      - VITE_URL=http://127.0.0.1:80/api/v1/
    build:
      context: web
      dockerfile: Dockerfile
      args:
        - VITE_URL=http://127.0.0.1:80/api/v1/
    ports:
      - "5173:5173"
    depends_on:
      - auth
      - scheduler
    networks:
      - web-network

  bot:
    environment:
      - TOKEN=6103437457:AAE4zwSvDGB7um2E1euk0-x0SMoSl69EbRc
      - API_URL=http://gateway:80/api/v1/
    build:
      context: telegram-bot
      dockerfile: Dockerfile
    depends_on:
      - auth
      - scheduler
    networks:
      - web-network

volumes:
  cache:
    driver: local

networks:
  api-network:
    driver: bridge
  redis-network:
    driver: bridge
  web-network:
    driver: bridge
  mongo-network:
    driver: bridge